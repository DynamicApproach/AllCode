==7710== Memcheck, a memory error detector
==7710== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==7710== Using Valgrind-3.15.0-608cb11914-20190413 and LibVEX; rerun with -h for copyright info
==7710== Command: ./tester
==7710== Parent PID: 2457
==7710== 
--7710-- 
--7710-- Valgrind options:
--7710--    --leak-check=full
--7710--    --show-leak-kinds=all
--7710--    --track-origins=yes
--7710--    --verbose
--7710--    --log-file=valgrind-out.txt
--7710-- Contents of /proc/version:
--7710--   Linux version 4.4.0-22000-Microsoft (Microsoft@Microsoft.com) (gcc version 5.4.0 (GCC) ) #1-Microsoft Fri Jun 04 16:28:00 PST 2021
--7710-- 
--7710-- Arch and hwcaps: AMD64, LittleEndian, amd64-cx16-lzcnt-rdtscp-sse3-ssse3-avx-avx2-bmi-f16c-rdrand
--7710-- Page sizes: currently 4096, max supported 4096
--7710-- Valgrind library directory: /usr/lib/x86_64-linux-gnu/valgrind
--7710-- Reading syms from /mnt/c/Users/lloyd/Documents/programming/lab8/tester
--7710-- Reading syms from /usr/lib/x86_64-linux-gnu/ld-2.31.so
--7710--   Considering /usr/lib/x86_64-linux-gnu/ld-2.31.so ..
--7710--   .. CRC mismatch (computed 975d0390 wanted 30bd717f)
--7710--   Considering /lib/x86_64-linux-gnu/ld-2.31.so ..
--7710--   .. CRC mismatch (computed 975d0390 wanted 30bd717f)
--7710--   Considering /usr/lib/debug/lib/x86_64-linux-gnu/ld-2.31.so ..
--7710--   .. CRC is valid
--7710-- Reading syms from /usr/lib/x86_64-linux-gnu/valgrind/memcheck-amd64-linux
--7710--    object doesn't have a symbol table
--7710--    object doesn't have a dynamic symbol table
--7710-- Scheduler: using generic scheduler lock implementation.
--7710-- Reading suppressions file: /usr/lib/x86_64-linux-gnu/valgrind/default.supp
==7710== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-7710-by-tom-on-???
==7710== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-7710-by-tom-on-???
==7710== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-7710-by-tom-on-???
==7710== 
==7710== TO CONTROL THIS PROCESS USING vgdb (which you probably
==7710== don't want to do, unless you know exactly what you're doing,
==7710== or are doing some strange experiment):
==7710==   /usr/lib/x86_64-linux-gnu/valgrind/../../bin/vgdb --pid=7710 ...command...
==7710== 
==7710== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==7710==   /path/to/gdb ./tester
==7710== and then give GDB the following command
==7710==   target remote | /usr/lib/x86_64-linux-gnu/valgrind/../../bin/vgdb --pid=7710
==7710== --pid is optional if only one valgrind process is running
==7710== 
==7710== error calling PR_SET_PTRACER, vgdb might block
--7710-- REDIR: 0x4022e10 (ld-linux-x86-64.so.2:strlen) redirected to 0x580c9ce2 (???)
--7710-- REDIR: 0x4022be0 (ld-linux-x86-64.so.2:index) redirected to 0x580c9cfc (???)
--7710-- Reading syms from /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_core-amd64-linux.so
--7710--    object doesn't have a symbol table
--7710-- Reading syms from /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so
--7710--    object doesn't have a symbol table
==7710== WARNING: new redirection conflicts with existing -- ignoring it
--7710--     old: 0x04022e10 (strlen              ) R-> (0000.0) 0x580c9ce2 ???
--7710--     new: 0x04022e10 (strlen              ) R-> (2007.0) 0x0483f060 strlen
--7710-- REDIR: 0x401f5f0 (ld-linux-x86-64.so.2:strcmp) redirected to 0x483ffd0 (strcmp)
--7710-- REDIR: 0x4023370 (ld-linux-x86-64.so.2:mempcpy) redirected to 0x4843a20 (mempcpy)
--7710-- Reading syms from /usr/lib/x86_64-linux-gnu/libc-2.31.so
--7710--   Considering /usr/lib/x86_64-linux-gnu/libc-2.31.so ..
--7710--   .. CRC mismatch (computed 86b78530 wanted e380f01c)
--7710--   Considering /lib/x86_64-linux-gnu/libc-2.31.so ..
--7710--   .. CRC mismatch (computed 86b78530 wanted e380f01c)
--7710--   Considering /usr/lib/debug/lib/x86_64-linux-gnu/libc-2.31.so ..
--7710--   .. CRC is valid
--7710-- REDIR: 0x48f8600 (libc.so.6:memmove) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--7710-- REDIR: 0x48f7900 (libc.so.6:strncpy) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--7710-- REDIR: 0x48f8930 (libc.so.6:strcasecmp) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--7710-- REDIR: 0x48f7220 (libc.so.6:strcat) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--7710-- REDIR: 0x48f7960 (libc.so.6:rindex) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--7710-- REDIR: 0x48f9dd0 (libc.so.6:rawmemchr) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--7710-- REDIR: 0x4914e60 (libc.so.6:wmemchr) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--7710-- REDIR: 0x49149a0 (libc.so.6:wcscmp) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--7710-- REDIR: 0x48f8760 (libc.so.6:mempcpy) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--7710-- REDIR: 0x48f8590 (libc.so.6:bcmp) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--7710-- REDIR: 0x48f7890 (libc.so.6:strncmp) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--7710-- REDIR: 0x48f72d0 (libc.so.6:strcmp) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--7710-- REDIR: 0x48f86c0 (libc.so.6:memset) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--7710-- REDIR: 0x4914960 (libc.so.6:wcschr) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--7710-- REDIR: 0x48f77f0 (libc.so.6:strnlen) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--7710-- REDIR: 0x48f73b0 (libc.so.6:strcspn) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--7710-- REDIR: 0x48f8980 (libc.so.6:strncasecmp) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--7710-- REDIR: 0x48f7350 (libc.so.6:strcpy) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--7710-- REDIR: 0x48f8ad0 (libc.so.6:memcpy@@GLIBC_2.14) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--7710-- REDIR: 0x49160d0 (libc.so.6:wcsnlen) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--7710-- REDIR: 0x49149e0 (libc.so.6:wcscpy) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--7710-- REDIR: 0x48f79a0 (libc.so.6:strpbrk) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--7710-- REDIR: 0x48f7280 (libc.so.6:index) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--7710-- REDIR: 0x48f77b0 (libc.so.6:strlen) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--7710-- REDIR: 0x4900d20 (libc.so.6:memrchr) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--7710-- REDIR: 0x48f89d0 (libc.so.6:strcasecmp_l) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--7710-- REDIR: 0x48f8550 (libc.so.6:memchr) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--7710-- REDIR: 0x4914ab0 (libc.so.6:wcslen) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--7710-- REDIR: 0x48f7c60 (libc.so.6:strspn) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--7710-- REDIR: 0x48f88d0 (libc.so.6:stpncpy) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--7710-- REDIR: 0x48f8870 (libc.so.6:stpcpy) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--7710-- REDIR: 0x48f9e10 (libc.so.6:strchrnul) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--7710-- REDIR: 0x48f8a20 (libc.so.6:strncasecmp_l) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--7710-- REDIR: 0x49e0490 (libc.so.6:__strrchr_avx2) redirected to 0x483ea10 (rindex)
--7710-- REDIR: 0x49e02a0 (libc.so.6:__strchrnul_avx2) redirected to 0x4843540 (strchrnul)
--7710-- REDIR: 0x48f2260 (libc.so.6:malloc) redirected to 0x483b780 (malloc)
==7710== Invalid read of size 4
==7710==    at 0x48D9F5B: fclose@@GLIBC_2.2.5 (iofclose.c:48)
==7710==    by 0x109310: main (in /mnt/c/Users/lloyd/Documents/programming/lab8/tester)
==7710==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==7710== 
==7710== 
==7710== Process terminating with default action of signal 11 (SIGSEGV)
==7710==  Access not within mapped region at address 0x0
==7710==    at 0x48D9F5B: fclose@@GLIBC_2.2.5 (iofclose.c:48)
==7710==    by 0x109310: main (in /mnt/c/Users/lloyd/Documents/programming/lab8/tester)
==7710==  If you believe this happened as a result of a stack
==7710==  overflow in your program's main thread (unlikely but
==7710==  possible), you can try to increase the size of the
==7710==  main thread stack using the --main-stacksize= flag.
==7710==  The main thread stack size used in this run was 8388608.
--7710-- REDIR: 0x48f2850 (libc.so.6:free) redirected to 0x483c9d0 (free)
==7710== 
==7710== HEAP SUMMARY:
==7710==     in use at exit: 0 bytes in 0 blocks
==7710==   total heap usage: 1 allocs, 1 frees, 1,024 bytes allocated
==7710== 
==7710== All heap blocks were freed -- no leaks are possible
==7710== 
==7710== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
==7710== 
==7710== 1 errors in context 1 of 1:
==7710== Invalid read of size 4
==7710==    at 0x48D9F5B: fclose@@GLIBC_2.2.5 (iofclose.c:48)
==7710==    by 0x109310: main (in /mnt/c/Users/lloyd/Documents/programming/lab8/tester)
==7710==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==7710== 
==7710== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
